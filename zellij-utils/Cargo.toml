[package]
name = "zellij-utils"
version = "0.40.0"
authors = ["Kunal Mohan <kunalmohan99@gmail.com>"]
edition = "2021"
description = "A utility library for Zellij client and server"
license = "MIT"
include = ["src/**/*", "assets/"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true, features = ["backtrace"] }
backtrace = { workspace = true }
rmp-serde = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
clap_complete = { workspace = true }
colored = { workspace = true }
colorsys = { workspace = true }
crossbeam = { workspace = true }
directories = { workspace = true }
lazy_static = { workspace = true }
libc = { workspace = true }
nix = { workspace = true }
once_cell = { workspace = true }
percent-encoding = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
strip-ansi-escapes = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
thiserror = { workspace = true }
url = { workspace = true, features = ["serde"] }
vte = { workspace = true }
log = { workspace = true }
unicode-width = { workspace = true }
miette = { workspace = true }
regex = { workspace = true }
tempfile = { workspace = true }
kdl = { workspace = true }
shellexpand = { workspace = true }
uuid = { workspace = true }
async-channel = { workspace = true }
include_dir = { workspace = true }
prost = { workspace = true }
common-path = { workspace = true }

#[cfg(not(target_family = "wasm"))]
[target.'cfg(not(target_family = "wasm"))'.dependencies]
termwiz = { workspace = true }
log4rs = { workspace = true }
signal-hook = { workspace = true }
interprocess = { workspace = true }
async-std = { workspace = true }
notify-debouncer-full = { workspace = true }
humantime = { workspace = true }
futures = { workspace = true }
surf = { workspace = true }
openssl-sys = { workspace = true }

[dev-dependencies]
insta = { version = "1.6.0", features = ["backtrace"] }
expect-test = "1.4.1"

[build-dependencies]
prost-build = { workspace = true }

[features]
# If this feature is NOT set (default):
#   - builtin plugins (status-bar, tab-bar, ...) are loaded directly from the application binary
# If this feature is set:
#   - builtin plugins MUST be available from whatever is configured as `PLUGIN_DIR`
disable_automatic_asset_installation = []
unstable = []
plugins_from_target = []
